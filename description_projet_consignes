Projet SGBD
Gestion des ordinateurs d'une école
Collections:
•	Ordinateurs:
    o	Nom de l'ordinateur (correspond au numéro du local)
    o   Système d'exploitation + version
    o	Type de disque
    o	Capacité du disque
    o	Date d'installation
    o	Sous document 1:
        	Liste des logiciels
            •	Nom
            •	Description
    o	Sous document 2:
        	Liste des interventions
            •	Date
            •	Objet

•	Local:
    o	Numéro du local
    o	Type de classe (normale, labo info, labo science, etc.)

•	Professeurs
    o	Nom
    o	Prénom
    o	Discipline (math, sciences, français, etc.)
    o	Sous document 1:
        	Liste des cours
            •	Intitulé
            •	Année
            •	Classe (1A, 3Q, etc.)

•	Classes
    o	Libellé
    o	Option
    o	Sous document:
        	Liste des élèves
            •	Nom
            •	Prénom

Projet de développement SGBD


Pour ce projet, il vous est demandé de développer une API REST qui va interagir avec une base de données MongDB

Le projet sera à réaliser seul ou par groupe de 2 et devra respecter les contraintes suivantes :

V	Être développé en NODEJS via le Framework Express
V	Interagir avec MongoDB via le driver NODEJS MongoDB (ne pas utiliser Mongoose)
V	Comporter au minimum 4 collections.
•	Chaque collection devra avoir son Schema Validation ==> En cours ==> Max
•	Comporter au moins 3 requêtes d'aggregate ==> Charles
V	Au moins 1 des collections doit comporter un sous document 
•	Au moins 2 des collections devront contenir des références à d’autres collections ==> OK, plus utilisez des lookup pour joindre les documents. => Un chacun (Classe ==> Local ==> Charles) ET (Ordinateur ==> Local ==> Max)
•	Vous devrez créer les différentes routes vous permettant d’ajouter, modifier, consulter et supprimer les données (provenant de MongoDb) OK ==> Ajouter routes aggregate et lookup
•	Utiliser les codes HTTP et méthodes appropriés.
•	A chaque endroit où vous posterez des informations, utilisez des validateurs afin de vérifier en amont les données.

Le projet devra être versionné sous Github en mode privé et accessible par le chargé de cours. De plus, il est demandé de pousser vos changements en ligne à chaque fois que vous travaillerez sur le projet.

Le sujet est libre, mais devra être validé au préalable par le chargé de cours (via email pour garder une trace).  De plus le projet vous servira de Backend pour votre projet d'intégration de développement

Attention : Ne commencez pas le développement sans validation au préalable et n’utilisez pas des librairies externes non validées par le chargé de cours.

L’application devra être remise au plus tard le mercredi 10 mai par email à l’adresse suivante : samuel.lassoie@gmail.com.

